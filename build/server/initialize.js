// Generated by CoffeeScript 1.10.0
var configurePassport, initializeProxy, localization, path, remoteAccess, router;

path = require('path');

configurePassport = require('./lib/passport_configurator');

router = require('./lib/router');

initializeProxy = require('./lib/proxy').initializeProxy;

localization = require('./lib/localization_manager');

remoteAccess = require('./lib/remote_access');

module.exports = function(app, server, callback) {
  var assets, error;
  if (callback == null) {
    callback = function() {};
  }
  configurePassport();
  app.locals.t = localization.t;
  app.locals.getLocale = localization.getLocale;
  try {
    assets = require(path.join(__dirname, '../webpack-assets')).main;
  } catch (error) {
    assets = {
      js: 'app.js',
      css: 'app.css'
    };
  }
  app.locals.assets = assets;
  initializeProxy(app, server);
  return remoteAccess.updateCredentials('Device', function() {
    return remoteAccess.updateCredentials('Sharing', function() {
      return router.reset(function() {
        return router.displayRoutes(function() {
          return callback(app, server);
        });
      });
    });
  });
};
