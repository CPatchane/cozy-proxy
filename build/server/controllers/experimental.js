// Generated by CoffeeScript 1.7.1
this.app.get('/.well-known/host-meta.?:ext', this.webfingerHostMeta);

this.app.all('/.well-known/:module', this.webfingerAccount({
  webfingerHostMeta: (function(_this) {
    return function(req, res) {
      var host, hostmeta, template;
      if (req.params.ext !== 'json') {
        return res.send(404);
      }
      res.header('Access-Control-Allow-Origin', '*');
      res.header('Access-Control-Allow-Credentials', true);
      res.header('Access-Control-Allow-Methods', 'GET');
      host = 'https://' + req.get('host');
      template = "" + host + "/webfinger/json?resource={uri}";
      hostmeta = {
        links: {
          rel: 'lrdd',
          template: template
        }
      };
      return res.send(hostmeta);
    };
  })(this),
  webfingerAccount: (function(_this) {
    return function(req, res) {
      var OAUTH_VERSION, PROTOCOL_VERSION, accountinfo, host, link;
      if (req.params.module === 'caldav' || req.params.module === 'carddav') {
        return res.redirect('/public/webdav/');
      } else if (req.params.module === 'webfinger') {
        host = 'https://' + req.get('host');
        OAUTH_VERSION = 'http://tools.ietf.org/html/rfc6749#section-4.2';
        PROTOCOL_VERSION = 'draft-dejong-remotestorage-01';
        res.header('Access-Control-Allow-Origin', '*');
        res.header('Access-Control-Allow-Credentials', true);
        res.header('Access-Control-Allow-Methods', 'GET');
        accountinfo = {
          links: []
        };
        if (_this.routes['remotestorage']) {
          link = {
            href: "" + host + "/public/remotestorage/storage",
            rel: 'remotestorage',
            type: PROTOCOL_VERSION,
            properties: {
              'auth-method': OAUTH_VERSION,
              'auth-endpoint': "" + host + "/apps/remotestorage/oauth/"
            }
          };
          link.properties[OAUTH_VERSION] = link.properties['auth-endpoint'];
          accountinfo.links.push(link);
        }
        return res.send(accountinfo);
      } else {
        return res.send(404);
      }
    };
  })(this)
}));
